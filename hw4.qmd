---
title: "PLAN 372 HW 4"
author: "Jeron Perry"
format: html
---

# Load Libraries
```{R}
# Load the tidyverse package 
library(tidyverse)
#Load the tidycensus package
library(tidycensus)
#Load the sf package
library(sf)
#Load the dplyr package 
library(dplyr)
```
# Load the Data
``` {R}
#Using read_csv and here::here, load in the airport data set, making the cbsa column types to "character" for later use
data = read_csv(here::here("airport_pairs.csv"), col_types = c(origin_cbsa="character", dest_cbsa="character"))
```

# Question 1: Market saturation analysis 
The first question the investors want to understand is how popular the existing routes from or to RDU are. Create a table of the existing flights to or from RDU, and the number of passengers traveling to each destination. Make sure to include both flights departing RDU and those arriving RDU. There are a few records in the data for flights between RDU and places that do not have nonstop service from RDU (e.g. Fairbanks, Tucson). Filter your table to only include airport pairs with more 10,000 passengers. [0.5 points]
```{R}
# Create a subset of the dataset called popular routes that is filtered to just RDU departures/arrivals and grouped by origin, destination, origin cbsa, destination cbsa, and distance. Filter the data set further to flights with more than 10,000 passengers after summarizing the total passengers for each flight
popular_routes = data |>
  filter(origin == "RDU" | dest == "RDU") |>
  group_by(origin, dest, origin_cbsa, dest_cbsa, distancemiles) |>
  summarize(total_passengers = sum(passengers)) |>
  filter(total_passengers > 10000)
#display the new dataset in the form of a table 
popular_routes
```

# Question 2: Bringing in Census data
Use tidycensus to retrieve Census data and match it to the airport pair data (the full dataset, not only flights to/from RDU). The geography you’ll want to use with tidycensus is cbsa for core-based statistical area; this will match the origin_cbsa and dest_cbsa codes in the airport data. Core-based statistical area is Census jargon for a city and its suburbs. Retrieve at least the total population, but consider whether there are any other variables you want to include that may be predictive of air travel volumes.

Join the CBSA population data to the airport data. You will need to join it twice, so that you have total population for the origin CBSA and the destination CBSA. You may want to create copies of the Census data with the variables renamed before joining, so that you know which columns are for the origin vs. destination airport. For instance, you might create one table with the population column called “origin_pop” and then join based on the origin CBSA, and another with the column called “destination_pop”, and then join based on the destination CBSA. If you get errors about types not matching, look at how we solved this in the R GIS exercise.

Some areas are served by multiple airports (for instance, Chicago is served by both O’Hare and Midway International Airports). The data show airport-to-airport volumes. Use group_by and summarize to create a new dataset that shows total CBSA to CBSA volumes.

A few airports are not in a metropolitan area. You can remove them from this analysis.

Generate scatterplots between origin population and total passengers, destination population and total passengers, and flight distance and total passengers. Include the scatterplots in your report, and describe what trend they show (if any). [1.5 points]

Extra credit: include a pair of scatterplots for another variable other than population, at the origin and destination [+1 point]
``` {R}
# Get a cbsa data set for cities and their surrounding areas using api census data and the get_acs function, with geography specified as cbsa, including the varaible for total population, the year 2022, and survey acs5. 
cbsa = get_acs(
  geography = "cbsa",
  variables = c("total_population" = "B01003_001"),
  year = 2022,
  survey = "acs5"
)

# Create a data sub set from the cbsa data set for origin population, renaming GEOID to origin_cbsa and estimate to origin_population 
origin_population = cbsa |>
  rename(origin_cbsa = GEOID, origin_population = estimate)

# Create a data sub set from the cbsa data set for destination population, renaming GEOID to dest_cbsa and estimate to dest_population
dest_population = cbsa |>
  rename(dest_cbsa = GEOID, dest_population = estimate)

# Filter the original airport dataset to flights with more than 10,000 passengers, grouping the dataset by origin, destination, origin cbsa, destination cbsa, and distance
data = data |>
  group_by(origin, dest, origin_cbsa, dest_cbsa, distancemiles) |>
  summarize(total_passengers = sum(passengers)) |>
  filter(total_passengers > 10000)

# Join the two data sets using a left join based on the "origin_cbsa" and "dest_cbsa" columns 
joined_data = data |>
  left_join(origin_population, by = "origin_cbsa") |>
  left_join(dest_population, by = "dest_cbsa")

# Create a new data set off the joined data set, grouping by origin and destination cbsa, summarizing for total passengers, origin population, destination population, and average flight distance
cbsa_analysis = joined_data |>
  group_by(origin_cbsa, dest_cbsa) |>
  summarize(total_passengers=sum(total_passengers),
            origin_population = first(origin_population),
            dest_population = first(dest_population),
            average_distance = mean(distancemiles))

# Create a ggplot scatterplot with origin population on the x axis and total passengers on the y axis
ggplot(cbsa_analysis, aes(x=origin_population, y = total_passengers)) +
  geom_point()

# Create a ggplot scatterplot with destination population on the x axis and total passengers on the y axis
ggplot(cbsa_analysis, aes(x=dest_population, y = total_passengers)) +
  geom_point()

# Create a ggplot scatterplot with average flight distance on the x axis and total passengers on the y axis
ggplot(cbsa_analysis, aes(x = average_distance, y = total_passengers)) +
  geom_point()
```

# Question 3: Passenger volume regression
Run a regression of total CBSA-to-CBSA passenger volumes on origin CBSA population, destination CBSA population, distance between cities, and any other Census variables you wish to include. Use all the data, not just data for flights coming to/going from RDU. Present the results of your regression as a table in your writeup, and interpret the coefficients (e.g., how many more airline passengers are associated with a 1000-person increase in population at the origin city, etc.) Interpret all coefficients in the model (except the constant/intercept). Do the coefficients make sense? Are they statistically significant? Does the model fit well, as indicated by R^2? [2 points + 1 extra credit point for including and interpreting variables other than population]
``` {R}
# Run a regression of total passengers to all other variables, including origin population, destination population, and average distance, using the cbsa analysis dataset
cbsa_regression = lm(total_passengers~origin_population + dest_population + average_distance, cbsa_analysis)

# Print a summary of this regression in the form of a table for interpretation 
summary(cbsa_regression)
```
# Question 4: Passenger volume regression
These are the routes Air Carolina is considering implementing:
RDU to Portland, OR (PDX) - 2,363 mi
RDU to El Paso, TX (ELP) - 1,606 mi
RDU to Tallahassee, FL (TLH) - 496 mi
RDU to Sacramento, CA (SMF) - 2,345 mi
Use your model to predict passenger demand on these routes. Be sure to predict demand in both directions, i.e. RDU to the destination, and the destination to RDU. Since your model is based on origin and destination metropolitan area Census data, you’ll have to find that data for these cities, and create a new table to predict from (it should already be in your dataset, since airlines already fly to all of these cities, just not from RDU).

Include a table with forecast demand for each route in your writeup, and discuss which route is likely to be the most popular. How confident are you in your projection, based on the 
 of your model? Are there any unexpected or nonsensical results? [2 points]
```{R}

# Manually create a new data set for the proposed new Air Carolina routes, including key variables such as flight name, flight distance, origin cbsa, destination cbsa, origin population, and destination population using the tibble function
air_carolina_routes = tibble(
  flight = c("Portland to RDU", "El Paso to RDU", "Tallahasee to RDU", "Sacramento to RDU", "RDU to Portland", "RDU to El Paso", "RDU to Tallahasee", "RDU to Sacramento"), average_distance = c(2363, 1606, 496, 2345, 2363, 1606, 496, 2345),
  origin_cbsa = c(38900, 21340, 45220, 40900, 39580, 39580, 39580, 39580),
  dest_cbsa = c(39580, 39580, 39580, 39580, 38900, 21340, 45220, 40900),
  origin_population = c(2505312, 867161, 386064, 2394673, 1420825, 1420825, 1420825, 1420825),
  dest_population = c(1420825, 1420825, 1420825, 1420825, 2505312, 867161, 386064, 2394673))

# Using the predict function and the previously created regression, predict the usage of each of the proposed flights
air_carolina_routes$flight_usage = predict(cbsa_regression, air_carolina_routes)

# Pring the results in the form of a table
air_carolina_routes
```
 
